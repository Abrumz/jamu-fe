name: CI/CD Workflow for KMS Jamu

on:
  pull_request:
    branches:
      - main # Trigger CI on pull requests targeting the main branch
  push:
    branches:
      - main # Trigger CD on push to the main branch

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build the project
        env:
          CI: false
        run: npm run build

  build-and-deploy:
    needs: ci # Ensure deploy only after CI success
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            set -e  # Exit on any error
            source ~/.bashrc || source ~/.profile
            cd /root/jamu-fe

            # Stash any local changes before running npm install
            git stash push -m "Stash local changes"

            # Stash any remaining changes (if any)
            git stash push -m "Stash remaining local changes"

            # Force pull changes from main
            git fetch origin main
            git reset --hard origin/main

            # Ensure the lockfile is up to date again after resolving conflicts
            /usr/bin/npm install --legacy-peer-deps

            # Apply stashed changes and resolve conflicts if necessary
            git stash pop || true
            if git diff --name-only --diff-filter=U | grep -q "package-lock.json"; then
              echo "package-lock.json has unresolved conflicts. Automatically resolving conflicts."
              git checkout --theirs package-lock.json
              git add package-lock.json
              git commit -m "Automatically resolved conflicts in package-lock.json"
            fi

            git add package-lock.json
            git commit -m "Update package-lock.json after npm install"

            # Build the project
            /usr/bin/npm run build

            # Use pm2 to manage the process
            /usr/bin/pm2 start /usr/bin/pm2 --name "jamu-kms" -- start || /usr/bin/pm2 restart jamu-kms -f
